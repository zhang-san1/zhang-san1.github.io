import{_ as a,W as n,X as p,Y as t}from"./framework-6447176f.js";const o="/assets/drools04-870c6f1d.png",e="/assets/drools05-a1346bf2.png",c="/assets/drools06-4e81b7c7.png",r="/assets/drools07-773af8a2.png",l="/assets/drools08-8c6992c6.png",s="/assets/drools09-a3327555.png",i="/assets/drools10-a5749542.png",k="/assets/drools11-a57d9dbd.png",u="/assets/drools12-5a63464e.png",d="/assets/drools13-f1dc2cad.png",m="/assets/drools14-8499a8eb.png",b="/assets/drools15-c96b9ebb.png",g="/assets/drools16-cbe07883.png",_="/assets/drools17-5bed5ae1.png",h="/assets/drools18-fc66f311.png",f="/assets/drools19-3d597d03.png",v="/assets/drools20-f63e9182.png",x="/assets/drools21-7874ed89.png",B="/assets/drools22-a1ca2bc8.png",y="/assets/drools23-b26bc653.png",D="/assets/drools24-61409754.png",I="/assets/drools25-82f279a3.png",K="/assets/drools26-dadc2e3f.png",T="/assets/drools27-5b9879fd.png",L="/assets/drools28-d02646ea.png",R="/assets/drools29-25c3a238.png",A="/assets/drools30-c0a2e3c6.png",P="/assets/drools31-b40fb66a.png",N="/assets/drools32-a7e4b29e.png",S="/assets/drools33-61647632.png",w="/assets/drools34-2fdaa776.png",F="/assets/drools35-c474b8dd.png",M="/assets/drools36-c97358f7.png",O="/assets/drools37-c4f34354.png",W="/assets/drools38-31491727.png",Z="/assets/drools39-4c2eebda.png",C="/assets/drools40-8f8545f8.png",E="/assets/drools41-538c8aa6.png",j="/assets/drools42-73572662.png",V={},G=t('<h1 id="远程调用drools" tabindex="-1"><a class="header-anchor" href="#远程调用drools" aria-hidden="true">#</a> 远程调用Drools</h1><h2 id="创建空间、项目" tabindex="-1"><a class="header-anchor" href="#创建空间、项目" aria-hidden="true">#</a> 创建空间、项目</h2><p>WorkBench中存在空间和项目的概念。我们在使用WorkBench时首先需要创建空间（Space），在空间中创建项目，在项目中创建数据对象、规则文件等。</p><h3 id="创建空间" tabindex="-1"><a class="header-anchor" href="#创建空间" aria-hidden="true">#</a> 创建空间</h3><p>登录WorkBench后进入系统首页，点击首页中的Design区域进入项目列表页面：</p><p><img src="'+o+'" alt=""></p><p>点击右上角Add Space按钮弹出创建添加空间窗口</p><p><img src="'+e+'" alt=""></p><p>录入空间名称，点击Save按钮则完成空间的创建，如下图：</p><p><img src="'+c+'" alt=""></p><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h3><p>前面已经提到，我们在WorkBench中需要先创建空间，在空间中才能创建项目。上面我们已经创建了一个空间MyTest，现在需要住此空间中创建项目。</p><p>点击MyTest空间，进入此空间</p><p><img src="'+r+'" alt=""></p><p>可以看到当前空间中还没有项目 点击Add Project按钮弹出添加项目窗口</p><p><img src="'+l+'" alt=""></p><p>在添加项目窗口中录入项目名称（例如项目名称为pro1），点击Add按钮完成操作</p><p><img src="'+s+'" alt=""></p><p>可以看到在完成项目创建后，系统直接跳转到了项目页面。要查看当前MyTest空间中的所有项目，可以点击左上角MyTest链接：</p><p><img src="'+i+'" alt=""></p><h2 id="创建数据对象" tabindex="-1"><a class="header-anchor" href="#创建数据对象" aria-hidden="true">#</a> 创建数据对象</h2><p>数据对象其实就是JavaBean，一般都是在drl规则文件中使用进行规则匹配。</p><p>在MyTest空间中点击pro1项目，进入此项目页面</p><p><img src="'+s+'" alt=""></p><p>点击 Add Asset按钮选择“数据对象”</p><p><img src="'+k+'" alt=""></p><p>在弹出的创建数据对象窗口中输入数据对象的名称，点击确定按钮完成操作</p><p><img src="'+u+'" alt=""></p><p>操作完成后可以看到如下：</p><p><img src="'+d+'" alt=""></p><p>点击“添加字段”按钮弹出新建字段窗口</p><p><img src="'+m+'" alt=""></p><p>在新建字段窗口中录入字段Id（其实就是属性名），选择类型，点击创建按钮完成操作</p><p><img src="'+b+'" alt=""></p><p>完成操作后可以看到刚才创建的字段：</p><p><img src="'+g+'" alt=""></p><p>可以点击添加字段按钮继续创建其他字段</p><p><img src="'+_+'" alt=""></p><p>注意添加完字段后需要点击右上角保存按钮完成保存操作</p><p><img src="'+h+'" alt=""></p><p>点击源代码按钮可以查看刚才创建的Person对象源码</p><p><img src="'+f+'" alt=""></p><p>点击左上角pro1项目链接，可以看到当前pro1项目中已经创建的各种类型的对象</p><p><img src="'+v+'" alt=""></p><h2 id="创建drl规则文件" tabindex="-1"><a class="header-anchor" href="#创建drl规则文件" aria-hidden="true">#</a> 创建DRL规则文件</h2><p>在pro1项目页面点击右上角Add Asset按钮，选择“DRL文件”，弹出创建DRL文件窗口</p><p><img src="'+x+'" alt=""></p><p>在添加DRL文件窗口录入DRL文件名称，点击确定按钮完成操作</p><p><img src="'+B+'" alt=""></p><p>上面点击确定按钮完成创建DRL文件后，页面会跳转到编辑DRL文件页面</p><p><img src="'+y+'" alt=""></p><p>可以看到DRL规则文件页面分为两个部分：左侧为项目浏览视图、右侧为编辑区域，需要注意的是左侧默认展示的不是项目浏览视图，需要点击上面设置按钮，选择“资料库视图”和“显示为文件夹”，如下图所示： <img src="'+D+'" alt=""></p><p>在编辑DRL文件页面右侧区域进行DRL文件的编写，点击右上角保存按钮完成保存操作，点击检验按钮进行规则文件语法检查</p><p><img src="'+I+'" alt=""></p><p>点击左上角pro1项目回到项目页面，可以看到此项目下已经存在两个对象，即person.drl规则文件和Person类：</p><p><img src="'+K+'" alt=""></p><h2 id="创建测试场景" tabindex="-1"><a class="header-anchor" href="#创建测试场景" aria-hidden="true">#</a> 创建测试场景</h2><p>前面我们已经创建了Person数据对象和person规则文件，现在我们需要测试一下规则文件中的规则，可以通过创建测试场景来进行测试。</p><p>在项目页面点击Add Asset按钮选择“测试场景”，弹出创建测试场景窗口</p><p><img src="'+T+'" alt=""></p><p>在弹出的创建测试场景窗口中录入测试场景的名称，点击确定完成操作</p><p><img src="'+L+'" alt=""></p><p>完成测试场景的创建后，页面会跳转到测试场景编辑页面，如下图 <img src="'+R+'" alt=""></p><p>因为我们编写的规则文件中需要从工作内存中获取Person对象进行规则匹配，所以在测试场景中需要准备Person对象给工作内存，点击“GIVEN”按钮弹出新建数据录入窗口，选择Person类，输入框中输入事实名称（名称任意），如下图</p><p><img src="'+A+'" alt=""></p><p>录入事实名称后点击后面的添加按钮，可以看到Person对象已经添加成功</p><p><img src="'+P+'" alt=""></p><p>我们给工作内存提供的Person对象还需要设置age属性的值，点击“添加字段”按钮弹出窗口，选择age属性</p><p><img src="'+N+'" alt=""></p><p>点击确定按钮后可以看到字段已经添加成功：</p><p><img src="'+S+'" alt=""></p><p>点击age属性后面的编辑按钮，弹出字段值窗口</p><p><img src="'+w+'" alt=""></p><p>在弹出的窗口中点击字面值按钮，重新回到测试场景页面，可以看到age后面出现输入框，可以为age属性设置值</p><p><img src="'+F+'" alt=""></p><p>设置好age属性的值后点击保存按钮保存测试场景</p><p>点击右上角“运行测试场景”按钮进行测试</p><p><img src="'+M+`" alt=""></p><p>测试成功后可以在日志上看到运行结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker logs -f -t --tail 10 容器ID 实时查看docker容器ID的最后10行日志
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>控制台显示日志</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">2023</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">06</span><span class="token constant">T09</span><span class="token operator">:</span><span class="token number">50</span><span class="token operator">:</span><span class="token number">59.630817920</span>Z <span class="token number">09</span><span class="token operator">:</span><span class="token number">50</span><span class="token operator">:</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">623</span> <span class="token constant">INFO</span>  <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>compiler<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>KieContainerImpl</span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token keyword">default</span> task<span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token class-name">Start</span> creation of <span class="token class-name">KieBase</span><span class="token operator">:</span> defaultKieBase
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">06</span><span class="token constant">T09</span><span class="token operator">:</span><span class="token number">50</span><span class="token operator">:</span><span class="token number">59.875398697</span>Z <span class="token number">09</span><span class="token operator">:</span><span class="token number">50</span><span class="token operator">:</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">872</span> <span class="token constant">INFO</span>  <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>compiler<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>KieContainerImpl</span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token keyword">default</span> task<span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token class-name">End</span> creation of <span class="token class-name">KieBase</span><span class="token operator">:</span> defaultKieBase
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">06</span><span class="token constant">T09</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">00.316376325</span>Z <span class="token number">09</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">00</span><span class="token punctuation">,</span><span class="token number">312</span> <span class="token constant">INFO</span>  <span class="token punctuation">[</span>stdout<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token keyword">default</span> task<span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span> youth
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">06</span><span class="token constant">T09</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">59.014747875</span>Z <span class="token number">09</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">008</span> <span class="token constant">INFO</span>  <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>compiler<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>KieContainerImpl</span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token keyword">default</span> task<span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token class-name">Start</span> creation of <span class="token class-name">KieBase</span><span class="token operator">:</span> defaultKieBase
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">06</span><span class="token constant">T09</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">59.149414989</span>Z <span class="token number">09</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">148</span> <span class="token constant">INFO</span>  <span class="token punctuation">[</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>drools<span class="token punctuation">.</span>compiler<span class="token punctuation">.</span>kie<span class="token punctuation">.</span>builder<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>KieContainerImpl</span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token keyword">default</span> task<span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token class-name">End</span> creation of <span class="token class-name">KieBase</span><span class="token operator">:</span> defaultKieBase
<span class="token number">2023</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">06</span><span class="token constant">T09</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">59.176955234</span>Z <span class="token number">09</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">174</span> <span class="token constant">INFO</span>  <span class="token punctuation">[</span>stdout<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token keyword">default</span> task<span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span> youth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置kiebase和kiesession" tabindex="-1"><a class="header-anchor" href="#设置kiebase和kiesession" aria-hidden="true">#</a> 设置KieBase和KieSession</h2><p>在pro1项目页面点击右边设置按钮进入设置页面</p><p><img src="`+O+'" alt=""></p><p>在设置页面选择“KIE bases”选项</p><p><img src="'+W+'" alt=""></p><p>在弹出的页面点击“add kie bases”按钮进行设置</p><p><img src="'+Z+'" alt=""></p><p>设置kie sessions</p><p><img src="'+C+'" alt=""></p><p>设置完成后点击右上角保存按钮完成设置操作，可以通过左侧浏览视图点击kmodule.xml，查看文件内容</p><p><img src="'+E+'" alt=""></p><h2 id="编译、构建、部署" tabindex="-1"><a class="header-anchor" href="#编译、构建、部署" aria-hidden="true">#</a> 编译、构建、部署</h2><p>前面我们已经在WorkBench中创建了一个空间MyTest，并且在此空间中创建了一个项目pro1，在此项目中创建了数据文件、规则文件和测试场景，如下图：</p><p><img src="'+j+'" alt=""></p><p>点击右上角“Compile”按钮可以对项目进行编译，点击“Bulid&amp;Deploy”按钮进行构建和部署。</p>',97),J=[G];function X(Y,q){return n(),p("div",null,J)}const H=a(V,[["render",X],["__file","drools10.html.vue"]]);export{H as default};
