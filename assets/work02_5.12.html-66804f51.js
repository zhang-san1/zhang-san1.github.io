import{_ as n,W as s,X as a,Y as p}from"./framework-6447176f.js";const t="/assets/1-9cd19cc9.gif",e="/assets/2-3ba7dbee.gif",o="/assets/3-626fdc56.gif",c="/assets/4-eeac58d0.gif",l="/assets/512_1-a32b1847.webp",i="/assets/512_2-131c250e.webp",u="/assets/512_3-6fa056d9.webp",r="/assets/512_4-210419fd.webp",k="/assets/512_5-db17b4d0.webp",d="/assets/Snipaste_2023-05-12_18-02-02-8024aba8.png",v={},m=p(`<h3 id="_1、snmp协议的概念" tabindex="-1"><a class="header-anchor" href="#_1、snmp协议的概念" aria-hidden="true">#</a> 1、snmp协议的概念</h3><h4 id="snmp协议是什么" tabindex="-1"><a class="header-anchor" href="#snmp协议是什么" aria-hidden="true">#</a> SNMP协议是什么？</h4><pre><code>简单网络管理协议（Simple Network Management Protocol，SNMP）是由互联网工程任务组定义的一套网络管理协议。该协议是基于简单网关监视协议（Simple Gateway Monitor Protocol，SGMP）制定的。

SNMP 可以使网络管理员通过一台工作站完成对计算机、路由器和其他网络设备的远程管理和监视。利用 SNMP 协议可以更好地管理和监控网络。管理工作站可以远程管理所有支持该协议的网络设备，如监视网络状态、修改网络设备配置、接收网络事件警告等。
</code></pre><h4 id="snmp-协议概述" tabindex="-1"><a class="header-anchor" href="#snmp-协议概述" aria-hidden="true">#</a> SNMP 协议概述</h4><pre><code>由于网络设备越来越多，网络规模越来越大，管理这些设备也越来越重要。远程管理网络的需求日益迫切，SNMP 应运而生。

SNMP 协议能够帮助网络管理员提高网络管理效率，及时发现和解决网络问题，对网络增长做好规划。网络管理员还可以通过 SNMP 协议，接收网络节点的通知消息和警告事件报告等，从而获知网络出现的问题
</code></pre><h4 id="snmp-架构组成" tabindex="-1"><a class="header-anchor" href="#snmp-架构组成" aria-hidden="true">#</a> SNMP 架构组成</h4><p>SNMP 的架构由 3 部分组成，分别为社区、网络管理站和节点，如图所示。</p><p><img src="`+t+'" alt=""></p><p>社区、网络管理站和节点说明如下：</p><ul><li>社区：同一个管理框架下的网络管理站和所有节点的集合。</li><li>网络管理站：一个管理控制台，也称为网络管理系统（Network Management System，NMS）。它是一台带有必要 SNMP 管理软件的普通计算机，主要用来管理与监控网络上的设备。</li><li>节点：网络上的设备（被管理的设备）。例如，上图中的路由器、网关等都是节点设备。</li></ul><h4 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理" aria-hidden="true">#</a> 工作原理</h4><p>SNMP 可以用来发现、查询和监视网络中其他设备的状态信息。其工作流程如图所示。</p><p><img src="'+e+'" alt=""></p><p>上图中展现了管理员通过 NMS 获取网关监控数据的工作流程，其中涉及了一些 SNMP 协议的关键信息。</p><p>为了方便理解，下面先介绍这些信息的作用及含义。</p><ul><li>MIB（管理信息库）：任何一个被管理的设备都表示成一个对象，并称为被管理的对象。而 MIB 就是被管理对象的集合。它定义了被管理对象的一系列属性，如对象的名称、对象的访问权限和对象的数据类型等。每个设备都有自己的 MIB。MIB 是一种树状数据库，MIB 管理的对象，就是树的端节点，每个节点都有唯一位置和唯一名字。</li><li>SNMP 代理：是一种嵌入在被管理设备中的网络管理软件模块，主要用来控制本地机器的管理信息。它还负责将管理信息转换成 SNMP 兼容的格式，传递给 NMS。</li></ul><p>上图所示的工作流程分为以下 4 个步骤：</p><ol><li>当管理员查询被管理设备中的对象的相关值时，首先通过网络管理站 NMS 中的 MIB 找到相关对象。</li><li>网络管理站 NMS 向 SNMP 代理申请 MIB 中定义对象的相关值。</li><li>SNMP 代理在自己的 MIB 库中进行查找。</li><li>SNMP 代理将找到的对象相关值返回给网络管理站 NMS。</li></ol><h4 id="通信方式" tabindex="-1"><a class="header-anchor" href="#通信方式" aria-hidden="true">#</a> 通信方式</h4><p>SNMP 采用特殊的客户机/服务器模式进行通信。这里的客户端指的是网络管理站 NMS，服务器指的是 SNMP 代理。实际上它们的通信方式是网络管理站 NMS 与 SNMP 代理之间的通信，如图所示。</p><p><img src="'+o+'" alt=""></p><p>上图中的通信方式分为请求与应答两个步骤：</p><ol><li>网络管理站 NMS 向 SNMP 代理发出请求，询问一个 MIB 定义的信息的参数值。</li><li>SNMP 代理收到请求后，返回关于 MIB 定义信息的各种查询。</li></ol><h4 id="操作类型" tabindex="-1"><a class="header-anchor" href="#操作类型" aria-hidden="true">#</a> 操作类型</h4><p>SNMP 协议用来管理管理站 NMS 与 SNMP 代理之间的信息交互。因此，它提供了多种操作类型。</p><p>常用的 6 种操作类型如图所示。</p><p><img src="'+c+`" alt=""> 上图中为 5 种信息交互形式的操作类型，一共有 6 种操作类型，每种操作类型含义如下：</p><ul><li>get-request：网络管理站 NMS 从 SNMP 代理处提取一个或多个参数值。</li><li>get-response：返回一个或多个参数的值。</li><li>get-next-request：网络管理站 NMS 从 SNMP 代理处提取一个或多个参数的下一个参数值。</li><li>set-request：网络管理站 NMS 设置 SNMP 代理处 MIB 的相关参数值。</li><li>trap：SNMP 代理主动向网络管理站 NMS 发送报文消息。</li><li>informRequest：SNMP 代理主动向网络管理站 NMS 发送报文消息，NMS 进行响应。</li></ul><h3 id="_2、交换机阻断和iptables防火墙阻断的原理和实现" tabindex="-1"><a class="header-anchor" href="#_2、交换机阻断和iptables防火墙阻断的原理和实现" aria-hidden="true">#</a> 2、交换机阻断和iptables防火墙阻断的原理和实现</h3><h4 id="一、交换机阻断" tabindex="-1"><a class="header-anchor" href="#一、交换机阻断" aria-hidden="true">#</a> 一、交换机阻断</h4><h4 id="一、防火墙原理" tabindex="-1"><a class="header-anchor" href="#一、防火墙原理" aria-hidden="true">#</a> 一、防火墙原理</h4><p>防火墙一种位于内部网络与外部网络之间的网络安全系统。一项信息安全的防护系统。按照给定的规则，允许或者限制网络报文通过。 防火墙根据其管理的范围来分可以将其划分为主机防火墙和网络防火墙；根据其工作机制来区分又可分为包过滤型防火墙（netfilter）和代理服务器（Proxy）。 主要工作在网络层，针对 TCP/IP 数据包实施过滤和限制，属于典型的包过滤防火墙（或称为网络层防火墙）。 在这里主要通过iptables工具添加“规则”，Linux主机防火墙由用户态iptables工具和内核态netfilter模块来实现。</p><h4 id="二、包过滤型防火墙的工作原理" tabindex="-1"><a class="header-anchor" href="#二、包过滤型防火墙的工作原理" aria-hidden="true">#</a> 二、包过滤型防火墙的工作原理</h4><p>包过滤型防火墙主要依赖于Linux内核软件netfilter，它是一个Linux内核“安全框架”，而iptables是内核软件netfilter的配置工具，工作于用户空间。iptables/netfilter组合就是Linux平台下的过滤型防火墙，并且这个防火墙软件是免费的，可以用来替代商业防火墙软件，来完成网络数据包的过滤，修改，重定向以及网络地址转换（nat）等功能。</p><p>Linux网络管理员通过配置iptables规则以及对应的网路数据包处理逻辑，当网络数据包符合这样的规则时，就做执行预先定义好的相应的处理逻辑。可以简单的总结为：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">IF</span> network_pkg match rule<span class="token punctuation">;</span> <span class="token constant">THEN</span>
    handler
<span class="token constant">FI</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中规则可以包括匹配数据报文的源地址，目的地址，传输层协议（TCP/UDP/ICMP/..）以及应用层协议（HTTP/FTP/SMTP/..）等，处理逻辑就是根据规则所定义的方法来处理这些数据包，如放行（accept），拒绝（reject），丢弃（drop）等。</p><h4 id="三、关卡与链" tabindex="-1"><a class="header-anchor" href="#三、关卡与链" aria-hidden="true">#</a> 三、关卡与链</h4><p>一个客户端的数据报文和服务器的交互流程就如下图所示：</p><p><img src="`+l+'" alt=""></p><p>所以为了使防火墙达到包过滤的目的，我们需要在数据报文流经的路径上，设置一些关卡： 只有让所有进出的报文都流经这些关卡中， 同时我们在关卡上设置一些条件， 报文经过检查后，符合放行条件的才给放行, 而那些不符合不达标的条件的报文则会被阻止，不能够放行。 在Linux主机中的防火墙“iptables”中，<strong>关卡就称之为【链】</strong>，所谓的 <strong>条件就称之为【规则】</strong>，<strong>配置使用防火墙，其实就是在相应的链中添加规则</strong>。 Linux主机防火墙中设置了有5道关卡，即【5链】：</p><p>netfilter是工作于内核空间当中的一系列网络（TCP/IP）协议栈的钩子（hook），为内核模块在网络协议栈中的不同位置注册回调函数（callback）。也就是说，在数据包经过网络协议栈的不同位置时做相应的由iptables配置好的处理逻辑。netfilter中的五个钩子（这里也称为五个关卡）PRE_ROUTING，INPUT，FORWARD，OUTPUT，POST_ROUTING，网络数据包的流向图如下图所示：</p><p><img src="'+i+'" alt=""></p><p>当主机/网络服务器网卡收到一个数据包之后进入内核空间的TCP/IP协议栈进行层层解封装 PRE_ROUTING: 刚刚进入网络层的数据包通过PRE_ROUTING关卡时，要进行一次路由选择，当目标地址为本机地址时，数据进入INPUT，非本地的目标地址进入FORWARD（需要本机内核支持IP_FORWARD），所以目标地址转换通常在这个关卡进行 INPUT：经过路由之后送往本地的数据包经过此关卡，所以过滤INPUT包在此点关卡进行 FORWARD：经过路由选择之后要转发的数据包经过此关卡，所以网络防火墙通常在此关卡配置 OUTPUT：由本地用户空间应用进程产生的数据包过此关卡，所以OUTPUT包过滤在此关卡进行 POST_ROUTING：刚刚通过FORWARD和OUTPUT关卡的数据包要通过一次路由选择由哪个接口送往网络中，经过路由之后的数据包要通过POST_ROUTING此关卡，源地址转换通常在此点进行 除input 和 output 两个链，其他三个链是作为一些网关路由器设备时才会使用。</p><p>根据实际的场景，数据报文的流向:</p><p>PREROUTING -&gt; INPUT -&gt; Process -&gt; OUTPUT -&gt; POSTROUTING（外网 到本机的报文） PREROUTING -&gt; FORWARD -&gt; POSTROUTING（由本机路由器 转发的报文） OUTPUT -&gt; POSTROUTING（本机进程发出的报文）</p><h4 id="四、4表5链n规则" tabindex="-1"><a class="header-anchor" href="#四、4表5链n规则" aria-hidden="true">#</a> 四、4表5链N规则</h4><p>链和规则之间的关系： 当报文经过某一个关卡时，这个关卡上的“规则”不止一条，很多条规则会按照顺序逐条匹配，将在此关卡的所有规则组织称“链”就很适合，对于经过的数据包按照顺序逐条匹配“规则”。如下图所示：</p><p><img src="'+u+'" alt=""></p><p>规则：就是是满足某个条件，就做什么事情，由条件+操作组合而成。其操作： -j ACCEPT|DROP（允许/不允许）来表示。 每个关卡中可以设置多条“规则”， 每一个关卡中由多条规则串在一起的就叫“链”。</p><p>每一条“链”上的一串规则里面有些功能是相似的，比如，A类规则都是对IP或者端口进行过滤，B类规则都是修改报文，我们考虑能否将这些功能相似的规则放到一起，这样管理iptables规则会更方便。iptables把具有相同功能的规则集合叫做“表”，并且定一个四种表：</p><ol><li><p>filter表： 数据包过滤；与之对应的内核模块是iptables_filter。包含三个规则链：INPUT、FORWARD、OUTPUT；</p></li><li><p>nat表：负责网络地址转换，用来修改数据包中的源、目标IP地址或端口；与之对应的内核模块是iptables_nat。包含四个规则链：PREROUTING、INPUT、OUTPUT、POSTROUTING；</p></li><li><p>mangle表：修改数据包内容，用来做流量整形的，给数据包设置标记; 与之对应的内核模块是iptables_mangle。包含五个规则链：PREROUTING、INPUT、FORWARD、OUTPUT、POSTROUTING；</p></li><li><p>raw表：确定是否对该数据包进行状态跟踪；与之对应的内核模块是iptables_raw。包含两个规则链，OUTPUT、PREROUTING。</p></li></ol><p>4表5链N规则的之间构成的关系如下图所示：</p><p><img src="'+r+'" alt=""></p><p>还需要注意的一点儿是，因为数据包经过一个关卡的时候，会将“链”中所有的“规则”都按照顺序逐条匹配，为相同功能的“规则”属于同一个“表”。那么，哪些“表”中的规则会放到“链”的最前面执行呢？这时候就涉及一个优先级的问题。iptables为我们提供了四张“表”，当它们处于同一条“链”的时候，它们的执行优先级关系如下： raw -&gt; mangle -&gt; nat -&gt; filter</p><h4 id="五、数据包经过过滤型防火墙的流程" tabindex="-1"><a class="header-anchor" href="#五、数据包经过过滤型防火墙的流程" aria-hidden="true">#</a> 五、数据包经过过滤型防火墙的流程</h4><p><img src="'+k+`" alt=""></p><h4 id="六、ipables规则" tabindex="-1"><a class="header-anchor" href="#六、ipables规则" aria-hidden="true">#</a> 六、ipables规则</h4><p>iptables规则由两部分组成，报文的匹配条件和匹配到之后的处理动作。</p><p>匹配条件：根据协议报文特征指定匹配条件，基本匹配条件和扩展匹配条件 处理动作：内建处理机制由iptables自身提供的一些处理动作 设置iptables规则时需要考量的要点：</p><p>根据要实现哪种功能，判断添加在那张“表”上</p><p>根据报文流经的路径，判断添加在那个“链”上</p><p>到本主机某进程的报文：PreRouting -&gt; Input -&gt; Process -&gt; Output -&gt; PostRouting 由本主机转发的报文：PreRouting -&gt; Forward -&gt; PostRouting 对于每一条“链”上其“规则”的匹配顺序，排列好检查顺序能有效的提高性能，因此隐含一定的法则：</p><p>同类规则（访问同一应用），匹配范围小的放上面 不同类规则（访问不同应用），匹配到报文频率大的放上面 将那些可由一条规则描述的多个规则合并为一个 设置默认策略 同时，也一定要注意，在远程连接主机配置防火墙时注意：</p><p>不要把“链”的默认策略修改为拒绝，因为有可能配置失败或者清除所有策略后无法远程到服务器，而是尽量使用规则条目配置默认策略 为防止配置失误策略把自己也拒掉，可在配置策略时设置计划任务定时清除策略，当确定无误后，关闭该计划任务</p><h4 id="七、iptables基本语法-iptables-选项-参数" tabindex="-1"><a class="header-anchor" href="#七、iptables基本语法-iptables-选项-参数" aria-hidden="true">#</a> 七、iptables基本语法：iptables(选项)(参数)</h4><p>选项</p><h5 id="通用匹配-源地址目标地址的匹配" tabindex="-1"><a class="header-anchor" href="#通用匹配-源地址目标地址的匹配" aria-hidden="true">#</a> 通用匹配：源地址目标地址的匹配</h5><p>-p：指定要匹配的数据包协议类型； -s, --source [!] address[/mask] ：把指定的一个／一组地址作为源地址，按此规则进行过滤。当后面没有 mask 时，address 是一个地址，比如：192.168.1.1；当 mask 指定时，可以表示一组范围内的地址，比如：192.168.1.0/255.255.255.0。 -d, --destination [!] address[/mask] ：地址格式同上，但这里是指定地址为目的地址，按此进行过滤。 -i, --in-interface [!] &lt;网络接口name&gt; ：指定数据包的来自来自网络接口，比如最常见的 eth0 。注意：它只对 INPUT，FORWARD，PREROUTING 这三个链起作用。如果没有指定此选项， 说明可以来自任何一个网络接口。同前面类似，&quot;!&quot; 表示取反。 -o, --out-interface [!] &lt;网络接口name&gt; ：指定数据包出去的网络接口。只对 OUTPUT，FORWARD，POSTROUTING 三个链起作用。</p><h5 id="查看管理命令" tabindex="-1"><a class="header-anchor" href="#查看管理命令" aria-hidden="true">#</a> 查看管理命令</h5><p>-L, --list [chain] 列出链 chain 上面的所有规则，如果没有指定链，列出表上所有链的所有规则。</p><h5 id="规则管理命令" tabindex="-1"><a class="header-anchor" href="#规则管理命令" aria-hidden="true">#</a> 规则管理命令</h5><p>-A, --append chain rule-specification 在指定链 chain 的末尾插入指定的规则，也就是说，这条规则会被放到最后，最后才会被执行。规则是由后面的匹配来指定。</p><p>-I, --insert chain [rulenum] rule-specification 在链 chain 中的指定位置插入一条或多条规则。如果指定的规则号是1，则在链的头部插入。这也是默认的情况，如果没有指定规则号。</p><p>-D, --delete chain rule-specification -D, --delete chain rulenum 在指定的链 chain 中删除一个或多个指定规则。</p><p>-R num：Replays替换/修改第几条规则</p><h5 id="链管理命令-这都是立即生效的" tabindex="-1"><a class="header-anchor" href="#链管理命令-这都是立即生效的" aria-hidden="true">#</a> 链管理命令（这都是立即生效的）</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">-</span><span class="token class-name">P</span><span class="token punctuation">,</span> <span class="token operator">--</span>policy chain target ：为指定的链 chain 设置策略 target。注意，只有内置的链才允许有策略，用户自定义的是不允许的。
<span class="token operator">-</span><span class="token class-name">F</span><span class="token punctuation">,</span> <span class="token operator">--</span>flush <span class="token punctuation">[</span>chain<span class="token punctuation">]</span> 清空指定链 chain 上面的所有规则。如果没有指定链，清空该表上所有链的所有规则。
<span class="token operator">-</span><span class="token class-name">N</span><span class="token punctuation">,</span> <span class="token operator">--</span><span class="token keyword">new</span><span class="token operator">-</span>chain chain 用指定的名字创建一个新的链。
<span class="token operator">-</span><span class="token class-name">X</span><span class="token punctuation">,</span> <span class="token operator">--</span>delete<span class="token operator">-</span>chain <span class="token punctuation">[</span>chain<span class="token punctuation">]</span> ：删除指定的链，这个链必须没有被其它任何规则引用，而且这条上必须没有任何规则。如果没有指定链名，则会删除该表中所有非内置的链。
<span class="token operator">-</span><span class="token class-name">E</span><span class="token punctuation">,</span> <span class="token operator">--</span>rename<span class="token operator">-</span>chain old<span class="token operator">-</span>chain <span class="token keyword">new</span><span class="token operator">-</span>chain ：用指定的新名字去重命名指定的链。这并不会对链内部照成任何影响。
<span class="token operator">-</span><span class="token class-name">Z</span><span class="token punctuation">,</span> <span class="token operator">--</span>zero <span class="token punctuation">[</span>chain<span class="token punctuation">]</span> ：把指定链，或者表中的所有链上的所有计数器清零。

<span class="token operator">-</span>j<span class="token punctuation">,</span> <span class="token operator">--</span>jump target <span class="token operator">&lt;</span>指定目标<span class="token operator">&gt;</span> ：即满足某条件时该执行什么样的动作。target 可以是内置的目标，比如 <span class="token constant">ACCEPT</span>，也可以是用户自定义的链。
<span class="token operator">-</span>h：显示帮助信息；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>iptables参数说明：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>参数	作用
<span class="token operator">-</span><span class="token class-name">P</span>	设置默认策略<span class="token operator">:</span>iptables <span class="token operator">-</span><span class="token class-name">P</span> <span class="token constant">INPUT</span> <span class="token punctuation">(</span><span class="token constant">DROP</span><span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token class-name">F</span>	清空规则链
<span class="token operator">-</span><span class="token class-name">L</span>	查看规则链
<span class="token operator">-</span><span class="token class-name">A</span>	在规则链的末尾加入新规则
<span class="token operator">-</span><span class="token class-name">I</span>	num 在规则链的头部加入新规则
<span class="token operator">-</span><span class="token class-name">D</span>	num 删除某一条规则
<span class="token operator">-</span>s	匹配来源地址<span class="token constant">IP</span><span class="token operator">/</span><span class="token constant">MASK</span>，加叹号”<span class="token operator">!</span>“表示除这个<span class="token constant">IP</span>外
<span class="token operator">-</span>d	匹配目标地址
<span class="token operator">-</span>i	网卡名称 匹配从这块网卡流入的数据
<span class="token operator">-</span>o	网卡名称 匹配从这块网卡流出的数据
<span class="token operator">-</span>p	匹配协议<span class="token punctuation">,</span>如tcp<span class="token punctuation">,</span>udp<span class="token punctuation">,</span>icmp
–dport num	匹配目标端口号
–sport num	匹配来源端口号
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-交换机阻断原理" tabindex="-1"><a class="header-anchor" href="#_2-1-交换机阻断原理" aria-hidden="true">#</a> 2.1 交换机阻断原理</h3><p>交换机阻断（Port Security）是一种网络安全措施，可以限制接入网络的设备数量，并防止未经授权的设备接入网络。</p><p>交换机阻断通常可以通过以下两种方式来实现：</p><ol><li><p>静态MAC地址绑定：在交换机上配置一个静态MAC地址表，将每个接口绑定到特定的MAC地址上。当网络设备连接到交换机的接口上时，交换机会检查设备的MAC地址是否在该接口的绑定列表中，如果不在，则该接口被阻断，设备无法连接到网络。</p></li><li><p>动态MAC地址学习：交换机可以动态学习每个接口连接的设备的MAC地址，并将其记录在MAC地址表中。当新设备连接到交换机的接口上时，交换机会将其MAC地址添加到MAC地址表中，并检查该MAC地址是否超过了预定义的阈值（通常是1或2个设备），如果超过了阈值，则该接口被阻断，设备无法连接到网络。</p></li></ol><h3 id="_2-2-交换机阻断的实现" tabindex="-1"><a class="header-anchor" href="#_2-2-交换机阻断的实现" aria-hidden="true">#</a> 2.2 交换机阻断的实现</h3><h4 id="_2-3-iptables防火墙阻断的原理" tabindex="-1"><a class="header-anchor" href="#_2-3-iptables防火墙阻断的原理" aria-hidden="true">#</a> 2.3 iptables防火墙阻断的原理</h4><p>iptables是Linux系统中的一个防火墙软件，用于过滤和管理网络数据包。它的阻断原理可以简单概括为以下三个步骤：</p><ul><li><p>匹配规则：iptables会按照事先定义好的规则对接收到的每个网络数据包进行匹配。规则可以根据IP地址、端口号、协议类型等多个条件来匹配。</p></li><li><p>判断动作：如果匹配成功，iptables会根据规则中定义的动作来判断是否阻断该数据包。常见的动作包括DROP（丢弃该数据包）、REJECT（拒绝该数据包并向发送端发送一个错误消息）和ACCEPT（接受该数据包）。</p></li><li><p>执行动作：如果匹配成功且判断动作为DROP或REJECT，则iptables会阻断该数据包；否则，iptables会允许该数据包通过防火墙并传递到下一层网络设备。</p></li></ul><h3 id="_3、主动扫描和被动扫描的区别" tabindex="-1"><a class="header-anchor" href="#_3、主动扫描和被动扫描的区别" aria-hidden="true">#</a> 3、主动扫描和被动扫描的区别</h3><p>主动扫描和被动扫描是网络安全中两种常见的扫描方式，它们的区别如下：</p><ul><li><p>主动扫描：是指通过专门的扫描工具，对网络中的目标进行主动扫描，以便发现目标的漏洞和弱点。主动扫描通常需要事先对目标进行信息收集，例如获取目标的IP地址、端口和服务信息等，然后使用专门的扫描工具对目标进行扫描。主动扫描具有主动性、准确性和高效性等特点，但也容易引起目标系统的警觉和防御。</p></li><li><p>被动扫描：是指通过对网络流量进行监听和分析，发现网络中的目标漏洞和弱点。被动扫描通常不需要对目标进行主动扫描，而是通过对目标系统的网络流量进行分析，发现其中的异常或者恶意行为。被动扫描具有隐蔽性和针对性等特点，但需要对网络流量进行实时监控和分析，并且可能会误报或漏报目标的漏洞和弱点。</p></li></ul><h3 id="_4、后台人员写一个多线程的java实例-不要完全照搬网上-结合自己的一些想法-写一个带点业务性质的实例" tabindex="-1"><a class="header-anchor" href="#_4、后台人员写一个多线程的java实例-不要完全照搬网上-结合自己的一些想法-写一个带点业务性质的实例" aria-hidden="true">#</a> 4、后台人员写一个多线程的Java实例（不要完全照搬网上，结合自己的一些想法，写一个带点业务性质的实例）</h3><p>订单实体类:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Order</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> price<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> quantity<span class="token punctuation">;</span>
    <span class="token comment">//省略set、get方法</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>订单支付：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderPay</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Order</span> order<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">OrderPay</span><span class="token punctuation">(</span><span class="token class-name">Order</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>order <span class="token operator">=</span> order<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> isQuantity <span class="token operator">=</span> <span class="token function">isQuantity</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getQuantity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isQuantity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//进行支付</span>
            <span class="token function">payOrder</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>order<span class="token punctuation">.</span><span class="token function">getQuantity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">//库存不足，支付失败</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;订单号为&quot;</span> <span class="token operator">+</span> order<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;的订单支付失败，商品库存不足！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isQuantity</span><span class="token punctuation">(</span> <span class="token keyword">int</span> quantity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>quantity <span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//进行支付</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">payOrder</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token class-name">Id</span><span class="token punctuation">,</span> <span class="token keyword">int</span> quantity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>quantity <span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;订单号为&quot;</span> <span class="token operator">+</span> <span class="token class-name">Id</span> <span class="token operator">+</span> <span class="token string">&quot;的订单支付成功！&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;订单库存:&quot;</span> <span class="token operator">+</span> quantity<span class="token punctuation">)</span><span class="token punctuation">;</span>
            quantity <span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>pojo</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Order</span> order1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order1<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order1<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order1<span class="token punctuation">.</span><span class="token function">setQuantity</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Order</span> order2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order2<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order2<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order2<span class="token punctuation">.</span><span class="token function">setQuantity</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Order</span> order3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order3<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order3<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order3<span class="token punctuation">.</span><span class="token function">setQuantity</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Thread</span> thread1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OrderPay</span><span class="token punctuation">(</span>order1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span> thread2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OrderPay</span><span class="token punctuation">(</span>order2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span> thread3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OrderPay</span><span class="token punctuation">(</span>order3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        thread1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread2<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thread3<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、自己建两张表-主、从表-然后关联查询出对应的信息-如-ipv4信息表-ipv4端口表-需要关联两张表查询出对应的ip信息和端口信息" tabindex="-1"><a class="header-anchor" href="#_5、自己建两张表-主、从表-然后关联查询出对应的信息-如-ipv4信息表-ipv4端口表-需要关联两张表查询出对应的ip信息和端口信息" aria-hidden="true">#</a> 5、自己建两张表，主、从表，然后关联查询出对应的信息，如：ipv4信息表，ipv4端口表，需要关联两张表查询出对应的IP信息和端口信息</h3><p>数据库：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">/*
 Navicat Premium Data Transfer

 Source Server         : localhost
 Source Server Type    : MySQL
 Source Server Version : 80013
 Source Host           : localhost:3306
 Source Schema         : network_info

 Target Server Type    : MySQL
 Target Server Version : 80013
 File Encoding         : 65001

 Date: 12/05/2023 17:01:28
*/</span>

<span class="token constant">SET</span> <span class="token class-name">NAMES</span> utf8mb4<span class="token punctuation">;</span>
<span class="token class-name">SET</span> <span class="token constant">FOREIGN_KEY_CHECKS</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token operator">--</span> <span class="token class-name">Table</span> structure <span class="token keyword">for</span> ip_info
<span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token constant">DROP</span> <span class="token constant">TABLE</span> <span class="token constant">IF</span> <span class="token constant">EXISTS</span> \`ip_info\`<span class="token punctuation">;</span>
<span class="token constant">CREATE</span> <span class="token constant">TABLE</span> \`ip_info\`  <span class="token punctuation">(</span>
  \`id\` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token class-name">NULL</span> <span class="token constant">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  \`ip_address\` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token constant">CHARACTER</span> <span class="token constant">SET</span> utf8mb4 <span class="token constant">COLLATE</span> utf8mb4_0900_ai_ci <span class="token constant">NULL</span> <span class="token class-name">DEFAULT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  \`subnet_mask\` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token constant">CHARACTER</span> <span class="token constant">SET</span> utf8mb4 <span class="token constant">COLLATE</span> utf8mb4_0900_ai_ci <span class="token constant">NULL</span> <span class="token class-name">DEFAULT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  \`gateway\` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token constant">CHARACTER</span> <span class="token constant">SET</span> utf8mb4 <span class="token constant">COLLATE</span> utf8mb4_0900_ai_ci <span class="token constant">NULL</span> <span class="token class-name">DEFAULT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  \`vlan\` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token constant">CHARACTER</span> <span class="token constant">SET</span> utf8mb4 <span class="token constant">COLLATE</span> utf8mb4_0900_ai_ci <span class="token constant">NULL</span> <span class="token class-name">DEFAULT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  <span class="token class-name">PRIMARY</span> <span class="token constant">KEY</span> <span class="token punctuation">(</span>\`id\`<span class="token punctuation">)</span> <span class="token class-name">USING</span> <span class="token constant">BTREE</span>
<span class="token punctuation">)</span> <span class="token constant">ENGINE</span> <span class="token operator">=</span> <span class="token class-name">InnoDB</span> <span class="token class-name">CHARACTER</span> <span class="token constant">SET</span> <span class="token operator">=</span> utf8mb4 <span class="token constant">COLLATE</span> <span class="token operator">=</span> utf8mb4_0900_ai_ci <span class="token constant">ROW_FORMAT</span> <span class="token operator">=</span> <span class="token class-name">Dynamic</span><span class="token punctuation">;</span>

<span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token operator">--</span> <span class="token class-name">Records</span> of ip_info
<span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`ip_info\` <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> &#39;<span class="token number">192.168</span><span class="token number">.0</span><span class="token number">.1</span><span class="token char">&#39;, &#39;</span><span class="token number">255.255</span><span class="token number">.255</span><span class="token number">.0</span><span class="token char">&#39;, &#39;</span><span class="token number">192.168</span><span class="token number">.0</span><span class="token number">.254</span><span class="token char">&#39;, &#39;</span><span class="token number">10</span>&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`ip_info\` <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> &#39;<span class="token number">172.16</span><span class="token number">.1</span><span class="token number">.1</span><span class="token char">&#39;, &#39;</span><span class="token number">255.255</span><span class="token number">.0</span><span class="token number">.0</span><span class="token char">&#39;, &#39;</span><span class="token number">172.16</span><span class="token number">.1</span><span class="token number">.254</span><span class="token char">&#39;, &#39;</span><span class="token number">20</span>&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`ip_info\` <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> &#39;<span class="token number">10.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token char">&#39;, &#39;</span><span class="token number">255.0</span><span class="token number">.0</span><span class="token number">.0</span><span class="token char">&#39;, &#39;</span><span class="token number">10.0</span><span class="token number">.0</span><span class="token number">.254</span><span class="token char">&#39;, &#39;</span><span class="token number">30</span>&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token operator">--</span> <span class="token class-name">Table</span> structure <span class="token keyword">for</span> ipv4_port
<span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token constant">DROP</span> <span class="token constant">TABLE</span> <span class="token constant">IF</span> <span class="token constant">EXISTS</span> \`ipv4_port\`<span class="token punctuation">;</span>
<span class="token constant">CREATE</span> <span class="token constant">TABLE</span> \`ipv4_port\`  <span class="token punctuation">(</span>
  \`id\` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token class-name">NOT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  \`ip_id\` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token constant">NULL</span> <span class="token class-name">DEFAULT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  \`port_number\` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token constant">CHARACTER</span> <span class="token constant">SET</span> utf8mb4 <span class="token constant">COLLATE</span> utf8mb4_0900_ai_ci <span class="token constant">NULL</span> <span class="token class-name">DEFAULT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  \`port_status\` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token constant">CHARACTER</span> <span class="token constant">SET</span> utf8mb4 <span class="token constant">COLLATE</span> utf8mb4_0900_ai_ci <span class="token constant">NULL</span> <span class="token class-name">DEFAULT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
  <span class="token class-name">PRIMARY</span> <span class="token constant">KEY</span> <span class="token punctuation">(</span>\`id\`<span class="token punctuation">)</span> <span class="token class-name">USING</span> <span class="token constant">BTREE</span><span class="token punctuation">,</span>
  <span class="token constant">INDEX</span> \`network_info_id\`<span class="token punctuation">(</span>\`ip_id\` <span class="token constant">ASC</span><span class="token punctuation">)</span> <span class="token class-name">USING</span> <span class="token constant">BTREE</span><span class="token punctuation">,</span>
  <span class="token constant">CONSTRAINT</span> \`network_info_id\` <span class="token class-name">FOREIGN</span> <span class="token constant">KEY</span> <span class="token punctuation">(</span>\`ip_id\`<span class="token punctuation">)</span> <span class="token constant">REFERENCES</span> \`ip_info\` <span class="token punctuation">(</span>\`id\`<span class="token punctuation">)</span> <span class="token constant">ON</span> <span class="token constant">DELETE</span> <span class="token constant">RESTRICT</span> <span class="token constant">ON</span> <span class="token class-name">UPDATE</span> <span class="token constant">RESTRICT</span>
<span class="token punctuation">)</span> <span class="token constant">ENGINE</span> <span class="token operator">=</span> <span class="token class-name">InnoDB</span> <span class="token class-name">CHARACTER</span> <span class="token constant">SET</span> <span class="token operator">=</span> utf8mb4 <span class="token constant">COLLATE</span> <span class="token operator">=</span> utf8mb4_0900_ai_ci <span class="token constant">ROW_FORMAT</span> <span class="token operator">=</span> <span class="token class-name">Dynamic</span><span class="token punctuation">;</span>

<span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token operator">--</span> <span class="token class-name">Records</span> of ipv4_port
<span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`ipv4_port\` <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token char">&#39;80&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;open&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`ipv4_port\` <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token char">&#39;443&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;open&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`ipv4_port\` <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token char">&#39;22&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;open&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`ipv4_port\` <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token char">&#39;80&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;closed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`ipv4_port\` <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token char">&#39;53&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;open&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">SET</span> <span class="token constant">FOREIGN_KEY_CHECKS</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实体类</p><p>ipInfo:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> ipInfo <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> ipAddress<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> subnetMask<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> gateway<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> vlan<span class="token punctuation">;</span>
    <span class="token keyword">private</span> ipv4Port ipv4Port<span class="token punctuation">;</span>
    <span class="token comment">//省略set 、get方法</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ipv4Port：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> ipv4Port <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> ipId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> portNumber<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> portStatus<span class="token punctuation">;</span>
     <span class="token comment">//省略set 、get方法</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>统一结果返回：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>network<span class="token punctuation">.</span>demos<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 返回数据
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">R</span> <span class="token keyword">extends</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>
	
	<span class="token keyword">public</span> <span class="token class-name">R</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">R</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&quot;未知异常，请联系管理员&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">R</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">R</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">R</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">R</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>
		r<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> r<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">R</span> <span class="token function">ok</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">R</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">R</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> r<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">R</span> <span class="token function">ok</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">R</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">R</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> r<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">R</span> <span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">R</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>networkInfoController:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> networkInfoController <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    ipInfoService ipInfoService<span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/ipInfo&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token keyword">public</span> <span class="token class-name">R</span> <span class="token function">getIpv4Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span>  <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> ipInfoService<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

networkInfoService<span class="token operator">:</span>
\`\`\`java
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> networkInfoService <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    networkInfoDao networkInfoDao<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>ipInfo<span class="token punctuation">&gt;</span></span> <span class="token function">getNetworkInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> networkInfoDao<span class="token punctuation">.</span><span class="token function">getNetworkInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

networkInfoDao<span class="token operator">:</span>
\`\`\`java
<span class="token keyword">public</span> <span class="token keyword">interface</span> networkInfoDao <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span>ipInfo<span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>ipInfo<span class="token punctuation">&gt;</span></span> <span class="token function">getNetworkInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>networkInfoMapper.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span> <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.example.network.demos.dao.networkInfoDao<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>InfoMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.example.network.demos.pojo.ipInfo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ipAddress<span class="token punctuation">&quot;</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ip_address<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>subnetMask<span class="token punctuation">&quot;</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>subnet_mask<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gateway<span class="token punctuation">&quot;</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gateway<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vlan<span class="token punctuation">&quot;</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vlan<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>association</span> <span class="token attr-name">autoMapping</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ipv4Port<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.example.network.demos.pojo.ipv4Port<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>association</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getNetworkInfo<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>InfoMap<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
        SELECT ip.id, ip.ip_address, ip.subnet_mask, ip.gateway, ip.vlan, port.port_number, port.ip_id, port.port_status
        FROM ip_info AS ip
        LEFT JOIN ipv4_port AS port
        on ip.id = port.ip_id
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试结果：</p><p><img src="`+d+'" alt=""></p>',114),b=[m];function g(h,f){return s(),a("div",null,b)}const y=n(v,[["render",g],["__file","work02_5.12.html.vue"]]);export{y as default};
