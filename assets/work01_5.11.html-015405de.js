import{_ as n,W as s,X as a,Y as p}from"./framework-6447176f.js";const t={},o=p(`<h2 id="网桥模式、路由模式、nat模式、旁路模式分别是什么意思" tabindex="-1"><a class="header-anchor" href="#网桥模式、路由模式、nat模式、旁路模式分别是什么意思" aria-hidden="true">#</a> 网桥模式、路由模式、NAT模式、旁路模式分别是什么意思</h2><ul><li><p>网桥模式：在网桥模式下，网络设备会将网络流量从一个物理网络接口转发到另一个物理网络接口，而不会更改流量的源IP地址或目标IP地址。网桥模式通常用于连接同一网络中的多个设备，并使它们能够相互通信。</p></li><li><p>路由模式：在路由模式下，网络设备可以识别不同网络之间的差异，并将流量从一个网络转发到另一个网络，同时更改源IP地址和目标IP地址。路由模式通常用于连接不同的网络（例如，连接局域网与互联网），并允许设备之间进行通信。</p></li><li><p>NAT模式：NAT（网络地址转换）模式通常用于连接私有网络到公共网络上。在NAT模式下，网络设备会将流量从一个网络接口转发到另一个网络接口，并更改流量的源IP地址和目标IP地址。这种方式，使私有网络中的设备可以访问公共网络资源，并且公共网络资源无法直接访问私有网络中的设备。</p></li><li><p>旁路模式：旁路模式是指将网络设备安装在流量路径旁边的模式。在旁路模式下，网络设备会复制流量并将其发送到安装设备上，以便分析、监视或过滤流量，然后再将原始流量发送到其目的地。这种方式，使得设备能够在不中断网络流量的情况下对网络流量进行分析和过滤。</p></li></ul><h2 id="ipv4的计算-如-192-168-2-0-16有多少位ip地址-并且分别用前端和后台写一个正常ipv4转长整形类型、长整形类型转正常ipv4的不同方法" tabindex="-1"><a class="header-anchor" href="#ipv4的计算-如-192-168-2-0-16有多少位ip地址-并且分别用前端和后台写一个正常ipv4转长整形类型、长整形类型转正常ipv4的不同方法" aria-hidden="true">#</a> IPV4的计算，如：192.168.2.0/16有多少位IP地址，并且分别用前端和后台写一个正常IPV4转长整形类型、长整形类型转正常IPV4的不同方法</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * “192.168.2.0/16”表示该 IP 地址范围的网络地址为192.168.2.0，子网掩码为255.255.0.0，掩码前16位为1，后面16位为0。
 *
 * 在计算可用 IP 地址数量时，我们需要排除两个特殊的 IP 地址：
 *
 * 1. 网络地址：即该子网的第一个 IP 地址。在本例子中，网络地址为192.168.2.0。
 * 2. 广播地址：即该子网的最后一个 IP 地址。在本例子中，子网掩码为255.255.0.0，因此广播地址为192.168.255.255。
 *
 * 因此，我们需要从可用地址中排除这两个特殊的 IP 地址。因此，可用地址数量为2的16次方-2，也就是65534个地址。
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后端java实现:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IPConversion</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 正常IPV4转长整形类型</span>
        <span class="token class-name">String</span> ipAddress <span class="token operator">=</span> <span class="token string">&quot;192.168.2.0&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> ipLong <span class="token operator">=</span> <span class="token function">ipToLong</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ipAddress <span class="token operator">+</span> <span class="token string">&quot; to long: &quot;</span> <span class="token operator">+</span> ipLong<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 长整形类型转正常IPV4</span>
        <span class="token class-name">String</span> ipString <span class="token operator">=</span> <span class="token function">longToIp</span><span class="token punctuation">(</span>ipLong<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ipLong <span class="token operator">+</span> <span class="token string">&quot; to IP address: &quot;</span> <span class="token operator">+</span> ipString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">ipToLong</span><span class="token punctuation">(</span><span class="token class-name">String</span> ipAddress<span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> ipAddress<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span> n <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> split<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            n <span class="token operator">&lt;&lt;=</span> <span class="token number">8</span><span class="token punctuation">;</span>
            n <span class="token operator">|=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">longToIp</span><span class="token punctuation">(</span><span class="token keyword">long</span> ipAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> longs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            longs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> ipAddress <span class="token operator">&amp;</span> <span class="token number">255</span><span class="token punctuation">;</span>
            ipAddress <span class="token operator">=</span> ipAddress <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>longs<span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">InetAddress</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">UnknownHostException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IPConversion</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 正常IPV4转长整形类型</span>
        <span class="token class-name">String</span> ipAddress <span class="token operator">=</span> <span class="token string">&quot;192.168.2.0&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> ipLong <span class="token operator">=</span> <span class="token function">ipToLong</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ipAddress <span class="token operator">+</span> <span class="token string">&quot; to long: &quot;</span> <span class="token operator">+</span> ipLong<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 长整形类型转正常IPV4</span>
        <span class="token class-name">String</span> ipString <span class="token operator">=</span> <span class="token function">longToIp</span><span class="token punctuation">(</span>ipLong<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ipLong <span class="token operator">+</span> <span class="token string">&quot; to IP address: &quot;</span> <span class="token operator">+</span> ipString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">ipToLong</span><span class="token punctuation">(</span><span class="token class-name">String</span> ipAddress<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span> <span class="token punctuation">{</span>
        <span class="token class-name">InetAddress</span> inetAddress <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByName</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> address <span class="token operator">=</span> inetAddress<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">byte</span> octet <span class="token operator">:</span> address<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">&lt;&lt;=</span> <span class="token number">8</span><span class="token punctuation">;</span>
            result <span class="token operator">|=</span> octet <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">longToIp</span><span class="token punctuation">(</span><span class="token keyword">long</span> ipAddress<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> address <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
                <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> ipAddress
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getByAddress</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端js实现:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
    <span class="token keyword">function</span> <span class="token function">ipToint</span><span class="token punctuation">(</span><span class="token parameter">ip</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        ip <span class="token operator">=</span> ip<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        num <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>ip<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">256</span> <span class="token operator">*</span> <span class="token number">256</span> <span class="token operator">*</span> <span class="token number">256</span> <span class="token operator">+</span> <span class="token function">Number</span><span class="token punctuation">(</span>ip<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">256</span> <span class="token operator">*</span> <span class="token number">256</span> <span class="token operator">+</span> <span class="token function">Number</span><span class="token punctuation">(</span>ip<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">256</span> <span class="token operator">+</span> <span class="token function">Number</span><span class="token punctuation">(</span>ip<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        num <span class="token operator">=</span> num <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// 长整形类型转正常IPV4</span>
    <span class="token keyword">function</span> <span class="token function">long2ip</span><span class="token punctuation">(</span><span class="token parameter">ipLong</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> parts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        parts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ipLong <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        parts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ipLong <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        parts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ipLong <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        parts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ipLong <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> parts<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// 测试</span>
    <span class="token keyword">const</span> ipAddress <span class="token operator">=</span> <span class="token string">&#39;192.168.2.0&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> ipLong <span class="token operator">=</span> <span class="token function">ipToint</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ipAddress <span class="token operator">+</span> <span class="token string">&#39; to long: &#39;</span> <span class="token operator">+</span> ipLong<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ipLong <span class="token operator">+</span> <span class="token string">&#39; to IP address: &#39;</span> <span class="token operator">+</span> <span class="token function">long2ip</span><span class="token punctuation">(</span>ipLong<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ipv4-地址转长整型的方法实现重点" tabindex="-1"><a class="header-anchor" href="#ipv4-地址转长整型的方法实现重点" aria-hidden="true">#</a> IPv4 地址转长整型的方法实现重点：</h3><ul><li><p>首先将 IPv4 地址按照“.”分割成四个十进制数，例如 &quot;192.168.2.0&quot; 分割为 [192, 168, 2, 0]。</p></li><li><p>将四个十进制数分别转化为对应的二进制数，例如 192 转化为二进制为 11000000，168 转化为二进制为 10101000。</p></li><li><p>将四个二进制数合并成一个 32 位的二进制数，例如将 11000000、10101000、00000010、00000000 合并为 11000000101010000000001000000000。</p></li><li><p>将 32 位的二进制数转换为长整型数，即为 IPv4 地址的长整型表示。</p></li></ul><h3 id="长整型转-ipv4-地址的方法实现重点" tabindex="-1"><a class="header-anchor" href="#长整型转-ipv4-地址的方法实现重点" aria-hidden="true">#</a> 长整型转 IPv4 地址的方法实现重点：</h3><ul><li><p>将长整型数转换为 32 位二进制数。</p></li><li><p>将 32 位二进制数按照每 8 位分组，分为四个二进制数，例如将 11000000101010000000001000000000 分为 [11000000, 10101000, 00000010, 00000000]。</p></li><li><p>将每个二进制数转换为十进制数，例如将 11000000 转换为 192，10101000 转换为 168。</p></li><li><p>将四个十进制数合并为一个 IPv4 地址字符串，中间使用“.”分隔，例如合并为 &quot;192.168.2.0&quot;。</p></li></ul><h2 id="前端和后台分别写一个校验一段字符串是否是ipv4的方法" tabindex="-1"><a class="header-anchor" href="#前端和后台分别写一个校验一段字符串是否是ipv4的方法" aria-hidden="true">#</a> 前端和后台分别写一个校验一段字符串是否是IPV4的方法</h2><p>后端java实现:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Matcher</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Pattern</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> testIsIpAddr <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;192.168.2.0&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token string">&quot;255.255.255.255&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> str3 <span class="token operator">=</span> <span class="token string">&quot;256.0.0.0&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> str4 <span class="token operator">=</span> <span class="token string">&quot;192.168.2.0/16&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">isIpAddr</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">isIpAddr</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//true</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">isIpAddr</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">isIpAddr</span><span class="token punctuation">(</span>str4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//false</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isIpAddr</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> pattern <span class="token operator">=</span> <span class="token string">&quot;^(25[0-5]|2[0-4]\\\\d|[0-1]\\\\d{2}|[1-9]?\\\\d).(25[0-5]|2[0-4]\\\\d|[0-1]\\\\d{2}|[1-9]?\\\\d).(25[0-5]|2[0-4]\\\\d|[0-1]\\\\d{2}|[1-9]?\\\\d).(25[0-5]|2[0-4]\\\\d|[0-1]\\\\d{2}|[1-9]?\\\\d)$&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">Pattern</span> r <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Matcher</span> m <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> m<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端js实现:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>	<span class="token keyword">function</span> <span class="token function">isValidIPv4</span><span class="token punctuation">(</span><span class="token parameter">ipAddress</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d).(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d).(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d).(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token comment">// 测试</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isValidIPv4</span><span class="token punctuation">(</span><span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//输出true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isValidIPv4</span><span class="token punctuation">(</span><span class="token string">&#39;192.168.2.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出 true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isValidIPv4</span><span class="token punctuation">(</span><span class="token string">&#39;256.0.0.0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出 false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isValidIPv4</span><span class="token punctuation">(</span><span class="token string">&#39;192.168.2.0/16&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出 false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用正则表达式校验字符串是否是-ipv4-地址" tabindex="-1"><a class="header-anchor" href="#使用正则表达式校验字符串是否是-ipv4-地址" aria-hidden="true">#</a> 使用正则表达式校验字符串是否是 IPv4 地址：</h2><ul><li>正则表达式校验：使用正则表达式来校验字符串是否符合 IPv4 地址的格式，即四个由小数点分隔的十进制数，每个数值在 0-255 之间。可以使用以下正则表达式：^(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d).(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d).(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d).(25[0-5]|2[0-4]\\d|[0-1]\\d{2}|[1-9]?\\d)$。</li></ul>`,20),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(t,[["render",c],["__file","work01_5.11.html.vue"]]);export{k as default};
