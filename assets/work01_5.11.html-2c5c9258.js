const i=JSON.parse('{"key":"v-21b9b4b8","path":"/work/work01_5.11.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"网桥模式、路由模式、NAT模式、旁路模式分别是什么意思","slug":"网桥模式、路由模式、nat模式、旁路模式分别是什么意思","link":"#网桥模式、路由模式、nat模式、旁路模式分别是什么意思","children":[]},{"level":2,"title":"IPV4的计算，如：192.168.2.0/16有多少位IP地址，并且分别用前端和后台写一个正常IPV4转长整形类型、长整形类型转正常IPV4的不同方法","slug":"ipv4的计算-如-192-168-2-0-16有多少位ip地址-并且分别用前端和后台写一个正常ipv4转长整形类型、长整形类型转正常ipv4的不同方法","link":"#ipv4的计算-如-192-168-2-0-16有多少位ip地址-并且分别用前端和后台写一个正常ipv4转长整形类型、长整形类型转正常ipv4的不同方法","children":[{"level":3,"title":"IPv4 地址转长整型的方法实现重点：","slug":"ipv4-地址转长整型的方法实现重点","link":"#ipv4-地址转长整型的方法实现重点","children":[]},{"level":3,"title":"长整型转 IPv4 地址的方法实现重点：","slug":"长整型转-ipv4-地址的方法实现重点","link":"#长整型转-ipv4-地址的方法实现重点","children":[]}]},{"level":2,"title":"前端和后台分别写一个校验一段字符串是否是IPV4的方法","slug":"前端和后台分别写一个校验一段字符串是否是ipv4的方法","link":"#前端和后台分别写一个校验一段字符串是否是ipv4的方法","children":[]},{"level":2,"title":"使用正则表达式校验字符串是否是 IPv4 地址：","slug":"使用正则表达式校验字符串是否是-ipv4-地址","link":"#使用正则表达式校验字符串是否是-ipv4-地址","children":[]}],"git":{},"readingTime":{"minutes":5.52,"words":1657},"filePathRelative":"work/work01_5.11.md","excerpt":""}');export{i as data};
